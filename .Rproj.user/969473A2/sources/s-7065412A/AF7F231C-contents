## packages -----------------------------------------------

# these lines make sure any user has all the necessary packages
packages <- c('shiny', 'data.table', 'sf', 'shinydashboard', 'shinyWidgets', 'leaflet',
              'htmltools', 'ggplot2', 'leaflet.extras', 'plotly', 'shinycssloaders', 'shinyjs')

miss_pkgs <- packages[!packages %in% installed.packages()[,1]]

if(length(miss_pkgs) > 0){
  install.packages(miss_pkgs)
}

invisible(lapply(packages, library, character.only = TRUE))

rm(miss_pkgs, packages)


## data ---------------------------------------------------

## the app ------------------------------------------------

app_title = 'LEHD Origin-Destination Employment Data'
app_subtitle = 'Employment Dynamics in the Twin Cities, 2010-2017'

## ui -------------------------------------------

ui <- dashboardPage(skin = "yellow",
                    dashboardHeader(title = app_title, titleWidth = 200),
                    title = app_title,
                    dashboardSidebar(width = 200,
                                     uiOutput("originDest"),
                                     column(width = 12, HTML('For questions, bug reports, or requests, contact <a href="mailto:raven.i.mcknight@gmail.com">Raven McKnight</a>'))
                                     ),
                    dashboardBody(
                      useShinyjs(),
                      fluidRow(valueBox(app_title, subtitle = app_subtitle, width - 12, color = "yellow")),
                      fluidRow(
                        box(width = 12, title = "Select Census Block Group(s)"),
                            fluidRow(
                              column(width - 9, shinyjs::hidden(div(id='loading', addSpinner(div()))),
                                     addSpinner(leafletOutput("map1", height = "600px"))
                                     ),
                              br(),
                              fluidRow(column(width = 2, uiOutput("clearPolys")),
                                       column(width = 10, uiOutput("colorScale")))
                            )
                      ),
                      verbatimTextOutput("codeTesting")
                    ) # end dashboardBody
                    ) # end dasboardPage



## server ---------------------------------------

server <- function(session, input, output){
  
  
}

## build app ------------------------------------

shinyApp(ui, server)
                    
                    